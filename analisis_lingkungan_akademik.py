# -*- coding: utf-8 -*-
"""analisis_lingkungan_akademik.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12i6b2n2JTpZh0s1wElbqoX-vQnq2dF0P
"""

import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from sklearn.decomposition import PCA

from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.ensemble import RandomForestRegressor
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score, mean_absolute_error
import matplotlib.pyplot as plt

st.title("Analisis Lingkungan Akademik Mahasiswa")

file = "SURVEY PENGARUH VARIABLE EKSTERNAL TERHADAP PRESTASI AKADEMIK MAHASISWA (Responses).xlsx - per 3Nov2024.csv"
df = pd.read_csv(file)
df

df.info()

st.write(df.isna().sum())

# isi NaN untuk kolom angka
numeric_cols = df.select_dtypes(include=['number']).columns
df[numeric_cols] = df[numeric_cols].fillna(df[numeric_cols].mean())

# Untuk kolom string, isi NaN dengan modus
object_cols = df.select_dtypes(include=['object']).columns
for col in object_cols:
    mode_val = df[col].mode().iloc[0]
    df[col].fillna(mode_val, inplace=True)

file2 = "IPK.csv"
df2 = pd.read_csv(file2)
df2

df2.info()

st.write(df2.isna().sum())

#fill NA
numeric_cols2 = df2.select_dtypes(include=['number']).columns
df2[numeric_cols2] = df2[numeric_cols2].fillna(df2[numeric_cols2].mean())

object_cols2 = df2.select_dtypes(include=['object']).columns
for col in object_cols2:
    mode_val2 = df2[col].mode().iloc[0]
    df2[col].fillna(mode_val2, inplace=True)

st.write(df2.isna().sum())

# Drop kolom identitas seperti 'Nama'
X_survey = df.drop(columns=['Nama', 'Program Studi'], errors='ignore')

# --- Visualisasi Clustering ---
st.subheader("Visualisasi Cluster Mahasiswa Berdasarkan Lingkungan Belajar")
fig1, ax1 = plt.subplots()
sns.scatterplot(data=df, x='PCA1', y='PCA2', hue='Cluster', palette='Set2', ax=ax1)
ax1.set_title("Cluster Mahasiswa")
st.pyplot(fig1)

# --- Evaluasi Model ---
st.subheader("Evaluasi Model Prediksi IPK")
st.write(f"**Random Forest R²:** {r2_rf:.4f}")
st.write(f"**Random Forest MAE:** {mae_rf:.4f}")
st.write(f"**Linear Regression R²:** {r2_lr:.4f}")
st.write(f"**Linear Regression MAE:** {mae_lr:.4f}")

# --- Cross-validation ---
st.write(f"**CV R² Linear Regression (mean):** {cv_scores_lr.mean():.4f} ± {cv_scores_lr.std():.4f}")
st.write(f"**CV R² Random Forest (mean):** {cv_scores_rf.mean():.4f} ± {cv_scores_rf.std():.4f}")

# --- Feature Importance ---
st.subheader("Top 10 Faktor yang Mempengaruhi IPK (Random Forest)")
st.dataframe(importances.head(10))

# --- Plot Prediksi IPK (Linear Regression) ---
st.subheader("Prediksi IPK dengan Linear Regression")
fig2, ax2 = plt.subplots()
ax2.scatter(y_test, y_pred_lr, alpha=0.5)
ax2.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'k--', lw=2)
ax2.set_xlabel("Actual IPK")
ax2.set_ylabel("Predicted IPK")
ax2.set_title("Actual vs Predicted IPK (Linear Regression)")
st.pyplot(fig2)

# --- Plot Prediksi IPK (Random Forest) ---
st.subheader("Prediksi IPK dengan Random Forest")
fig3, ax3 = plt.subplots()
ax3.scatter(y_test, y_pred_rf, alpha=0.5, color='green')
ax3.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'k--', lw=2)
ax3.set_xlabel("Actual IPK")
ax3.set_ylabel("Predicted IPK")
ax3.set_title("Actual vs Predicted IPK (Random Forest)")
st.pyplot(fig3)

# --- Hubungan Nilai dan IPK ---
st.subheader("Hubungan Rata-rata Nilai dengan IPK")
fig4, ax4 = plt.subplots()
sns.scatterplot(data=df2, x='rata2_nilai', y='IPK', ax=ax4)
ax4.set_title("Hubungan Rata-rata Nilai dengan IPK")
st.pyplot(fig4)


